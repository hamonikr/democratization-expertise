<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 

<mapper namespace="com.de.board.mapper.BoardMapper">

<resultMap type="com.de.vote.Vote" id="Vote">
	<result column="seq" property="seq"/>
	<result column="pno" property="pno"/>
	<result column="section" property="section"/>
	<result column="likes" property="likes"/>
	<result column="dislikes" property="dislikes"/>
	<result column="userno" property="userno"/>
	<result column="senduserno" property="senduserno"/>
</resultMap>

<resultMap type="com.de.vote.VoteUsers" id="VoteUsers">
	<result column="seq" property="seq"/>
	<result column="pno" property="pno"/>
	<result column="section" property="section"/>
	<result column="userno" property="userno"/>
</resultMap>

<resultMap type="com.de.user.Users" id="Users">
	<result column="userno" property="userno"/>
	<result column="userid" property="userid"/>
	<result column="username" property="username"/>
	<result column="useremail" property="useremail"/>
	<result column="userstatus" property="userstatus"/>
	<result column="userprofileimg" property="userprofileimg"/>
	<result column="picture" property="picture"/>
</resultMap>

<resultMap type="com.de.tag.Tags" id="Tags">
	<result column="tagno" property="tagno"/>
	<result column="title" property="title"/>
	<result column="userno" property="userno"/>
</resultMap>

<resultMap type="com.de.wiki.Wiki" id="Wiki">
	<result column="wikino" property="wikino"/>
	<result column="title" property="title"/>
	<result column="userno" property="userno"/>
	<result column="contents" property="contents"/>
</resultMap>

<resultMap type="com.de.board.Board" id="Board">
	<result column="boardno" property="boardno"/>
	<result column="editauth" property="editauth"/>
	<result column="title" property="title"/>
	<result column="contents" property="contents"/>
	<result column="userno" property="userno"/>
	<result column="firstuserno" property="firstuserno"/>
	<result column="tagno" property="tagno"/>
	<result column="readcnt" property="readcnt"/>
	<result column="deleteat" property="deleteat"/>
	<result column="registerdate" property="registerdate"/>
	<result column="updatedate" property="updatedate"/>
	<result column="firstRecordIndex" property="firstRecordIndex"/>
	<result column="recordCountPerPage" property="recordCountPerPage"/>
</resultMap>

	<select id="boardinfo" resultType="com.de.cmmn.CmmnMap" parameterType="com.de.cmmn.CmmnMap">
      select * from tb_boardconfig where boardid=#{boardid}
	</select>

	<sql id="listWhere">
	and	(title like '%' || #{searchtext} || '%' 
		or
		contents like '%' || #{searchtext} || '%')
	</sql>
	<select id="getList" parameterType="com.de.board.Board" resultMap="Board">
		select a.*
		from tb_boards a 
		<where>
		 a.section = #{section}
		 and a.deleteat = 0
		</where>
		<if test="sort == null" >order by a.registerdate desc</if>
		OFFSET #{firstRecordIndex} LIMIT #{recordCountPerPage}
	</select>
	
	<select id="getListCount" parameterType="com.de.board.Board" resultType="java.lang.Integer">
		select count(*) from tb_boards
		<where>
		section = #{section}
		and deleteat = 0
		</where>
	</select>
	
	<select id="getView" parameterType="integer" resultMap="Board">
		select a.*
		from tb_boards a 
		<where>
		a.boardno = #{boardno}
		</where>
	</select>
	
	<!-- <update id="updateReanCnt" parameterType="integer">
	update tb_questions set readcnt = readcnt + 1
	<where>
	questionno = #{questionno}
	</where>
	
	</update>
	
	<insert id="insertHistory" parameterType="com.de.cmmn.CmmnMap">
	INSERT INTO TB_QUESTIONS_HISTORY (seq, pno, contents, section, title, deleteat, editauth, readcnt, registerdate, tagno, updatedate, userno)
		VALUES
				((SELECT COALESCE(max(seq),0)+1 FROM tb_questions_history),#{questionno},#{contents},#{section},#{title}
				,#{deleteat},#{editauth},#{readcnt},#{registerdate},#{tagno},#{updatedate},#{userno})
	</insert>
	
	<select id="selectHistoryCnt" parameterType="com.de.cmmn.CmmnMap" resultType="integer">
	select count(*) from tb_questions_history where pno = #{questionno}
	</select>
	
	<select id="selectHistory" parameterType="com.de.cmmn.CmmnMap" resultType="com.de.cmmn.CmmnMap">
	select * from tb_questions_history where pno = #{questionno}
	</select>


	<select id="getMyList" parameterType="com.de.board.Board" resultMap="Board">
		SELECT
			a.questionno
			,a.title
			,a.contents
			,a.section
			,a.deleteat
			,a.editauth
			,a.readcnt
			,a.registerdate
			,a.tagno
			,a.updatedate
			,a.firstuserno
			,a.userno
			,b.*,c.*
			,(SELECT 
					count(d.answerno) 
				FROM 
					tb_answers d 
				WHERE 
					a.questionno = d.questionno) AS commentcnt
		FROM 
			<if test='section == "Q"'>
				tb_questions a LEFT OUTER JOIN tb_users b ON a.firstuserno = b.userno
				LEFT OUTER JOIN tb_vote c ON a.questionno = c.pno
			</if>
			<if test='section == "A"'>
				(
				    SELECT 
			        	qstn.questionno
			        	,qstn.title
			        	,qstn.contents
			        	,qstn.section
			        	,qstn.deleteat
			        	,qstn.editauth
			        	,qstn.readcnt
			        	,qstn.registerdate
			        	,qstn.tagno
			        	,qstn.updatedate
			        	,qstn.userno
			        FROM 
			        	tb_answers ansr
			        	LEFT JOIN tb_questions qstn
			        	ON ansr.questionno = qstn.questionno
			        WHERE
			        	ansr.userno = #{userno}
				) a LEFT OUTER JOIN tb_users b ON a.userno = b.userno
				LEFT OUTER JOIN tb_vote c ON a.questionno = c.pno
			</if>
		WHERE
			a.userno = #{userno}
			AND c.section = #{section}
		ORDER BY a.registerdate DESC
		OFFSET #{firstRecordIndex} LIMIT #{recordCountPerPage}
	</select>
	
	
	<select id="getCompQuestionList" parameterType="String" resultMap="Board">
		select 
		    a.questionno
		    ,a.title
		    ,a.contents
		    ,a.section
		    ,a.deleteat
		    ,a.editauth
		    ,a.readcnt
		    ,a.registerdate
		    ,a.tagno
		    ,a.updatedate
		    ,a.userno
		    ,b.*,c.*
		    ,(select count(d.answerno) from tb_answers d where a.questionno = d.questionno) as commentcnt
	    
		from tb_questions a left outer join tb_users b on a.userno = b.userno left outer join tb_vote c on a.questionno = c.pno
		where b.location = ( select enterprisearea from tb_enterprises where userno = (select userno from tb_users where uuiduser = #{useruuid}) )
	</select>
	
	<select id="getCompQuestionListCount" parameterType="String" resultType="java.lang.Integer">
		select 
		    count(*)
		from tb_questions a left outer join tb_users b on a.userno = b.userno left outer join tb_vote c on a.questionno = c.pno
		where b.location = ( select enterprisearea from tb_enterprises where userno = (select userno from tb_users where uuiduser = #{useruuid}) )
			and (select count(d.answerno) from tb_answers d where a.questionno = d.questionno)  = '0'
			and to_char(a.registerdate, 'YYYY-MM-DD') >= '2020-10-15'
	</select>
	and to_char(a.registerdate, 'YYYY-MM-DD') >= to_char(now(), 'YYYY-MM-DD')
	
	
	<select id="getAnswerComplete" parameterType="String" resultMap="Board">
		select 
			count(*) as questiontotalcnt, 
			sum(TA.questionChk) as answercompletecnt
		from (
			select  
			    distinct(TA.questionno)
			    , CASE WHEN TB.questionno > 0 THEN 1  ELSE 0 END  questionChk 
			    , TB.questionno
			from tb_questions TA  left outer join tb_answers TB on TA.questionno = TB.questionno
		)TA 
	</select> -->	
	
</mapper>